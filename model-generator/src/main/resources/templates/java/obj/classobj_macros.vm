#* Java class-related macros. 
   This file is loaded by com.cyc.model.templates.ClassObjTemplate.
*#


## SENT ----------------------------------------

#macro( mapi_class_sent_method $method )
#method_javadoc( $method )
  @Override
  #method_signature( $method ) {
$method.methodBody
  }
#end

## SET  ---------------------------------------------

#macro( append_method_arguments $method )
#foreach( $arg in $method.Arguments ), $arg.Name#end
#end

#macro( predicate_prop $pred_name )reln_${pred_name}#end


#macro( mapi_class_set_method $method )
#method_javadoc( $method )
  @Override
  #mapi_method_signature( $method ) {
$method.methodBody
  }

#method_javadoc( $method )
  @Override
  #method_signature( $method ) {
    ${method.Name}(contexts.getRelationContext(#predicate_prop( $method.Name ))#append_method_arguments( $method ));
  }
#end


## GET ---------------------------------------------

#macro( mapi_class_get_method $method )
#method_javadoc( $method )
  @Override
  #mapi_method_signature( $method ) {
$method.methodBody
  }

#method_javadoc( $method )
  @Override
  #method_signature( $method ) {
    return ${method.Name}(contexts.getRelationContext(#predicate_prop( $method.Name ))#append_method_arguments( $method ));
  }
#end


## GET_TYPE_LIST ---------------------------------------------

#macro( mapi_class_get_type_list_method $method )
#method_javadoc( $method )
  @Override
  #mapi_method_signature( $method ) {
$method.methodBody
  }

#method_javadoc( $method )
  @Override
  #method_signature( $method ) {
    return ${method.Name}(contexts.getRelationContext(#predicate_prop( $method.Name ))#append_method_arguments( $method ));
  }
#end


## FACTORY ---------------------------------------------

#macro( mapi_class_factory_method $method )
#method_javadoc( $method )
  #mapi_method_signature( $method ) {
$method.methodBody
  }

#method_javadoc( $method )
/*
TODO: "contexts" is non-static variable, decide on handling default context for static methods!!!!
  #method_signature( $method ) {
    return ${method.Name}(contexts.getRelationContext(#predicate_prop( $method.Name ))#append_method_arguments( $method ));
  }
*/
#end


##  mapi_class_method  ---------------------------------------------

#macro( mapi_class_method $method )
#if( $method.FType == "SET" )
#mapi_class_set_method( $method )
#elseif( $method.FType == "GET" )
#mapi_class_get_method( $method )
#elseif( $method.FType == "TYPE_GET_LIST" )
#mapi_class_get_type_list_method( $method )
#elseif( $method.FType == "FACTORY" )
#mapi_class_factory_method( $method )
#elseif( $method.FType == "SENT" )
#mapi_class_sent_method( $method )
#end
#end


##  mapi_class_methods  ---------------------------------------------

#macro( mapi_class_methods $methods )
#foreach( $method in $methods )
#mapi_class_method( $method )
#if( $foreach.hasNext )

#end
#end
#end
